#lm.mod<-lm(round(pvis) ~ connectance*nestedness, data=df.vis, family=poisson())
#summary(lm.mod)
#plot_model(lm.mod, type="pred", terms = c("connectance", "nestedness [30, 50, 70]"))
#plot_model(lm.mod, type = "int")#type = "int" will automatically plot the interaction terms, however, using mdrt.values = "minmax"
#poor model fit (239879-231798)/239879*100
ggarrange(plot_glm.conn_nest1, plot_glm.conn_nest2, plot_glm.conn_nest3,  labels = c("A", "B", "C"), ncol = 3, common.legend = TRUE)
#glm.conn_nest_pref1<-glm(round(number_visits) ~ connectance*nestedness*pl.pref, data=df.vis, family=poisson())
#summary(glm.conn_nest_pref1)
#dev.null <- glm.conn_nest_pref1$null.deviance
#dev.resid <- glm.conn_nest_pref1$deviance
#dev.explained <- (dev.null - dev.resid)/dev.null*100
#dev.explained
glm.conn_nest_dens1<-glm(round(number_visits) ~ connectance*nestedness*pl.dens, data=df.vis, family=poisson())
summary(glm.conn_nest_dens1)
pred <- expand.grid(connectance=seq(0,1,0.1), nestedness=c(30, 50, 70), pl.dens=c(0.2, 0.5, 0.7))
pred$y <- predict(glm.conn_nest_dens1, pred, type="response")
ggplot(pred,aes(x=connectance,y=y,color=factor(nestedness),group=nestedness))+geom_line()+
facet_grid(~pl.dens,labeller ="label_both") +
theme_light()+  ylab("Visitation rate")+xlab("Connectance") +labs(col = "Nestedness") +theme(strip.text.x = element_text(size = 12))
dev.null <- glm.conn_nest_dens1$null.deviance
dev.resid <- glm.conn_nest_dens1$deviance
dev.explained <- (dev.null - dev.resid)/dev.null*100
dev.explained
#with plant density
#glm.conn_nest_pref_dens1<-glm(round(number_visits) ~ connectance*nestedness*pl.pref*pl.dens, data=df.vis, family=poisson())
#summary(glm.conn_nest_pref_dens1)
#dev.null <- glm.conn_nest_pref_dens1$null.deviance
#dev.resid <- glm.conn_nest_pref_dens1$deviance
#dev.explained <- (dev.null - dev.resid)/dev.null*100
#dev.explained
#plot_glm.conn_nest_pref_dens1<-plot_model(glm.conn_nest_pref_dens1, type="pred", terms = c("connectance", "nestedness[0, 30, 50, 70]"))+
#set wd
setwd("C:/Users/skort/Documents/field work Nepal/field_data")
getwd()
#set wd
setwd("C:/Users/skort/Documents/field work Nepal/field_data")
#set wd
setwd("C:/Users/skort/Documents/field work Nepal/field_data")
#set wd
setwd("C:/Users/skort/Documents/field work Nepal/field_data")
getwd()
#load library
library(tidyverse)
o.7^4
0.7^4
#boxplot honey yield decline
boxplot(hy[, c(3:7)], ylab="kg honey per hive", xlab="years")
### KOB_2018_FOOD_WEB
#set working directory
#setwd("C:/LocalData/susakort/AOF_proposal/Mesosom_analyses/R_scripts")
setwd("C:/LocalData/susakort/Lucinda/Mesosom_analyses/kob_2018/R_scripts")
getwd()
### KOB_2018_FOOD_WEB
#set working directory
#setwd("C:/LocalData/susakort/AOF_proposal/Mesosom_analyses/R_scripts")
setwd("C:/LocalData/susakort/Lucinda/Mesosom_analyses/kob_2018/R_scripts")
### KOB_2018_FOOD_WEB
#set working directory
#setwd("C:/LocalData/susakort/AOF_proposal/Mesosom_analyses/R_scripts")
setwd("C:/LocalData/susakort/Lucinda/Mesosom_analyses/kob_2018/R_scripts")
### KOB_2018_FOOD_WEB
#set working directory
#setwd("C:/LocalData/susakort/AOF_proposal/Mesosom_analyses/R_scripts")
setwd("C:/LocalData/susakort/Lucinda/Mesosom_analyses/kob_2018/R_scripts")
getwd()
#this is the correct wd path
#C:\LocalData\susakort\field work Nepal\Rscripts
setwd("C:/LocalData/susakort/field work Nepal/Honeybee_decline_Nepal/Rscripts")
#Figure dir and pixels
ppi<-300 #pixels per inches
dirF<-"../Figures/"
#load library
#
library(tidyverse)
library(tidytext)
library(ggpubr)
library(ggpmisc)
#data
dt<-read.csv("../data/beehive_data_all.csv")
#honey yield change data file
hy<-read.csv("../data/honey_yield_change.csv", sep=";",check.names=FALSE)
colnames(hy)
#beehive change
bc<-read.csv("../data/beehive_change.csv", sep=";",check.names=FALSE)
bc
#colnames(bc)[(4:8)]<-c("2009", "2011", "2017", "2019", "2021")
#bkc<-read.csv("../data/beekeeper_change.csv", check.names=FALSE)
#livestock change
lsc<-read.csv("../data/farmer_livestock.csv", sep=";",check.names=FALSE)
colnames(lsc)
lsc
#loop over study village then extract the slopes
#linear model
mod.lm<-lm(log(value+1) ~ as.numeric(year), data=hy_t)
mod.lm
summary(mod.lm)
hy_t
#loop over study village then extract the slopes
#linear model
unique(hy_t$study_village)
unique(hy_t$study_village)
name.vill<-unique(hy_t$study_village)
hy_t$study_village==name.vill[1]
ids<-hy_t$study_village==name.vill[1]
x<-hy_t$honey_yield_change[ids]
x
x<-hy_t$value[ids]
x
y<-hy_t$year[ids]
y
mod.lm<-lm(log(x+1) ~ as.numeric(y), data=hy_t)
summary(mod.lm)
nSlope =",signif(fit1$coef[[2]], 5)
)
signif(mod.lm$coef[[2]]
)
no.vill<-length(unique(hy_t$study_village))
honey.slopes.vill<-c()
for (i in 1:no.vill){
name.vill<-unique(hy_t$study_village)
ids<-hy_t$study_village==name.vill[1]
x<-hy_t$value[ids]
y<-hy_t$year[ids]
mod.lm<-lm(log(x+1) ~ as.numeric(y), data=hy_t)
summary(mod.lm)
honey.slopes.vill[i]<-signif(mod.lm$coef[[2]])
}
honey.slopes.vill
no.vill<-length(unique(hy_t$study_village))
honey.slopes.vill<-c()
for (i in 1:no.vill){
name.vill<-unique(hy_t$study_village)
ids<-hy_t$study_village==name.vill[i]
x<-hy_t$value[ids]
y<-hy_t$year[ids]
mod.lm<-lm(log(x+1) ~ as.numeric(y), data=hy_t)
summary(mod.lm)
honey.slopes.vill[i]<-signif(mod.lm$coef[[2]])
}
honey.slopes.vill
goat_sheep<-lsc[,c(4,13, 14)]
ggplot(goat_sheep) + geom_boxplot(aes(study_village, goat_number), na.rm = FALSE)#boxplot
name.vill
goat_sheep
apply(goat_sheep[,c(2,3)], 2, sum)
apply(goat_sheep[,c(2,3)], 1, sum)
apply(goat_sheep[,c(2,3)], 1, sum, na.rm=TRUE)
goat_sheep
apply(goat_sheep[,c(2,3)], 1, sum, na.rm=TRUE)
cbind(goat_sheep[,1], apply(goat_sheep[,c(2,3)], 1, sum, na.rm=TRUE))
goat_sheep$total<-cbind(apply(goat_sheep[,c(2,3)], 1, sum, na.rm=TRUE))
goat_sheep
goat_sheep %>% group_by(study_village) %>% summarise(tot.gs=sum(total))
tot.gs<-goat_sheep %>% group_by(study_village) %>% summarise(tot.gs=sum(total))
plot(honey.slopes.vill~tot.gs)
tot.gs<-goat_sheep %>% group_by(study_village) %>% summarise(tot.gs=sum(total))
plot(honey.slopes.vill~tot.gs[,1])
plot(honey.slopes.vill~tot.gs[,2])
tot.gs[,2]
as.vector(tot.gs[,2])
honey.slopes.vill
plot(honey.slopes.vill~as.vector(tot.gs[,2]))
honey.slopes.vill
as.vector(tot.gs[,2])
as.numeric(tot.gs[,2])
str(tot.gs)
tot.gs<-goat_sheep %>% group_by(study_village) %>% summarise(tot=sum(total))
plot(honey.slopes.vill~as.numeric(tot.gs$tot)
tot.gs$tot
plot(honey.slopes.vill~tot.gs$tot)
hy_t %>% ggplot(aes(x = as.numeric(year),y = log(value+1))) + geom_point() + geom_smooth(method = "lm")+
facet_wrap(~study_village, scales = "free_y") +
theme_light()+stat_compare_means(method = "anova", label.y = 7)+ ylab("Honey yield per hive")+ xlab("year")
#+stat_poly_line() + stat_poly_eq(aes(label = paste(after_stat(eq.label), sep = "*\", \"*")))
plot(honey.slopes.vill~tot.gs$tot)
goat_sheep
goat_sheep$goat_number
tot.gs<-goat_sheep %>% group_by(study_village) %>% summar'ise(goat.vill=sum(goat_number), tot=sum(total))
plot(honey.slopes.vill~tot.gs$tot)
plot(honey.slopes.vill~tot.gs$tot)
#slopes
#signif(mod.lm$coef[[2]])
#make label on graphs
#label = paste("Adj R2 = ",signif(summary(fit1)$adj.r.squared, 5),
#              "\nIntercept =",signif(fit1$coef[[1]],5 ),
#              " \nSlope =",signif(fit1$coef[[2]], 5),
#              " \nP =",signif(summary(fit1)$coef[2,4], 5)))
################################
#beekeeper change
boxplot(bkc[, c(4:8)], ylab="number of beekeepers", xlab="years")
#barplot honey yield
barplot(hy[,c(3:7)])
#beekeeper data v1
bk_data<-read.csv("../data/all_data_fieldwork.csv")
bk_data
#clean data, column beekeeper change
bk_data[which(bk_data$beekeeper_change=="0"), 7]<-3#replace 0 (no change) with 3
bk_data[which(bk_data$beekeeper_change=="98"), 7]<-4#replace 98 (don't know) with 4
tot.gs<-goat_sheep %>% group_by(study_village) %>% summarise(goat.vill=sum(goat_number), tot=sum(total))
tot.gs
goat_sheep
tot.gs<-goat_sheep %>% group_by(study_village) %>% summarise(goat.vill=sum(goat_number), tot=sum(total), na.rm=TRUE)
tot.gs
ggplot(goat_sheep) + geom_boxplot(aes(study_village, goat_number), na.rm = TRUE)#boxplot
goat_sheep
goat_sheep<-lsc[,c(4,13, 14), , na.rm = TRUE]
goat_sheep<-lsc[,c(4,13, 14), na.rm = TRUE]
tot.gs<-goat_sheep %>% group_by(study_village) %>% summarise(goat.vill=omit.na(sum(goat_number)), tot=sum(total))
goat_sheep %>% replace_na(0)
goat_sheep$goat_number %>% replace_na(0)
goat_sheep[,c(2,3)] %>% replace_na(0)
goat_sheep$goat_number%>% replace_na(0)
tot.gs<-goat_sheep %>% group_by(study_village) %>% summarise(goat.vill=sum(goat_sheep$goat_number%>% replace_na(0)), tot=sum(total))
tot.gs
names(goat_sheep)
tot.g<-goat_sheep %>% group_by(study_village) %>% mutate(goat_number = ifelse(is.na(goat_number), 0, goat_number))
tot.g
#colnames(bc)[(4:8)]<-c("2009", "2011", "2017", "2019", "2021")
#bkc<-read.csv("../data/beekeeper_change.csv", check.names=FALSE)
#livestock change
lsc<-read.csv("../data/farmer_livestock.csv", sep=";",check.names=FALSE)
colnames(lsc)
lsc
goat_sheep<-lsc[,c(4,13, 14)]
tot.g<-
goat_sheep %>% group_by(study_village) %>% mutate(goat_number = ifelse(is.na(goat_number), 0, goat_number))
tot.g<-goat_sheep %>% group_by(study_village) %>% mutate(goat_number = ifelse(is.na(goat_number), 0, goat_number))
tot.g
tot.gs<-goat_sheep %>% group_by(study_village) %>%
mutate(goat_number = ifelse(is.na(goat_number), 0, goat_number), sheep_number = ifelse(is.na(sheep_number), 0, sheep_number))
tot.gs
goat_sheep[is.na(goat_sheep)] <- 0
goat_sheep
tot.gs<-goat_sheep %>% group_by(study_village) %>% tot=sum(total)
goat_sheep$total<-cbind(apply(goat_sheep[,c(2,3)], 1, sum, na.rm=TRUE))
tot.gs<-goat_sheep %>% group_by(study_village) %>% tot=sum(total)
goat_sheep$total
goat_sheep<-lsc[,c(4,13, 14)]
goat_sheep[is.na(goat_sheep)] <- 0
goat_sheep
goat_sheep$total<-cbind(apply(goat_sheep[,c(2,3)], 1, sum))
goat_sheep
tot.gs<-goat_sheep %>% group_by(study_village) %>% tot=sum(total)
goat_sheep
tot.gs<-goat_sheep %>% group_by(study_village) %>% total=sum(total)
colnames(goat_sheep)
tot.gs<-goat_sheep %>% group_by(study_village) %>% summarise(tot=sum(total))
tot.g<-goat_sheep %>% group_by(study_village) %>% summarise(tot=sum(goat_number))
tot.g
plot(honey.slopes.vill~tot.g$tot)
tot.s<-goat_sheep %>% group_by(study_village) %>% summarise(tot=sum(sheep_number))
plot(honey.slopes.vill~tot.g$tot)
plot(honey.slopes.vill~tot.s$tot)
honey.slopes.vill
plot(honey.slopes.vill~tot.gs$tot, labels=rownames( name.vill))
plot(honey.slopes.vill~tot.gs$tot, labels=name.vill)
name.vill
name.vill
plot(honey.slopes.vill~tot.gs$tot, labels=name.vill)
text(honey.slopes.vill~tot.gs$tot, labels=name.vill)
plot(honey.slopes.vill~tot.gs$tot)
text(honey.slopes.vill~tot.gs$tot, labels=name.vill)
plot(honey.slopes.vill~tot.gs$tot)
text(honey.slopes.vill~tot.gs$tot, labels=name.vill)
text(honey.slopes.vill~tot.gs$tot, labels=name.vill, cex=1)
plot(honey.slopes.vill~tot.gs$tot)
text(honey.slopes.vill~tot.gs$tot, labels=name.vill, cex=1)
plot(honey.slopes.vill~tot.gs$tot)
text(honey.slopes.vill~tot.gs$tot, labels=name.vill, cex=0.5)
hy_t %>% ggplot(aes(x = as.numeric(year),y = log(value+1))) + geom_jitter(shape=16, position=position_jitter(0.1), alpha=0.3)+ geom_smooth(method = "lm")+
theme_light()+stat_compare_means(method = "anova", label.y = 7)+ ylab("Honey yield per hive")+xlab("year")+
stat_poly_line() +  scale_x_continuous(breaks = scales::pretty_breaks(n = 5))+
geom_label(aes(x = 2009, y = 3.2), hjust = 0, label = paste("Adj R2 = ",signif(summary(mod.lm)$adj.r.squared, 5)," \nP =",signif(summary(mod.lm)$coef[2,4], 5)))
#ggsave(paste0(dirF, "honey_yield_all.png"),width=8, height = 10, units="in", dpi=600 )
hy_t %>% ggplot(aes(x = as.numeric(year),y = log(value+1))) + geom_point() + geom_smooth(method = "lm")+
facet_wrap(~study_village, scales = "free_y") +
theme_light()+stat_compare_means(method = "anova", label.y = 7)+ ylab("Honey yield per hive")+ xlab("year")
#+stat_poly_line() + stat_poly_eq(aes(label = paste(after_stat(eq.label), sep = "*\", \"*")))
#ggsave(paste0(dirF, "honey_yield_per_village.png"),width=8, height = 10, units="in", dpi=600 )
#beehive change
bc<-read.csv("../data/beehive_change.csv", sep=";",check.names=FALSE)
bc
View(bc)
bh_t <- pivot_longer(bc[,],cols = c("2009", "2012", "2017","2019","2021", "2022"), names_to = "year")
bh_t %>% ggplot(aes(x = as.numeric(year),y = log(value+1))) + geom_jitter(shape=16, position=position_jitter(0.1), alpha=0.3)+ geom_smooth(method = "lm")+
theme_light()+stat_compare_means(method = "anova", label.y = 7)+ ylab("no. of beehives")+xlab("year")+
stat_poly_line() + stat_poly_eq(aes(label = paste(after_stat(eq.label), sep = "*\", \"*")))+xlab("year")+
scale_x_continuous(breaks = scales::pretty_breaks(n = 5))
bh_t %>% ggplot(aes(x = as.numeric(year),y = log(value+1))) + geom_point() + geom_smooth(method = "lm")+
facet_wrap(~study_village, scales = "free_y") +
theme_light()+stat_compare_means(method = "anova", label.y = 7)+ ylab("no.of beehives")+ xlab("year")
stat_poly_line() + stat_poly_eq(aes(label = paste(after_stat(eq.label), sep = "*\", \"*")))
bh_t %>% ggplot(aes(x = as.numeric(year),y = log(value+1))) + geom_jitter(shape=16, position=position_jitter(0.1), alpha=0.3)+ geom_smooth(method = "lm")+
theme_light()+stat_compare_means(method = "anova", label.y = 7)+ ylab("no. of beehives")+xlab("year")+
stat_poly_line() + stat_poly_eq(aes(label = paste(after_stat(eq.label), sep = "*\", \"*")))+xlab("year")+
scale_x_continuous(breaks = scales::pretty_breaks(n = 5)), label="p-value: <0.001")
bh_t %>% ggplot(aes(x = as.numeric(year),y = log(value+1))) + geom_jitter(shape=16, position=position_jitter(0.1), alpha=0.3)+ geom_smooth(method = "lm")+
theme_light()+stat_compare_means(method = "anova", label.y = 7)+ ylab("no. of beehives")+xlab("year")+
stat_poly_line() + stat_poly_eq(aes(label = paste(after_stat(eq.label), sep = "*\", \"*")))+xlab("year")
#+scale_x_continuous(breaks = scales::pretty_breaks(n = 5)), label="p-value: <0.001")
bh_t %>% ggplot(aes(x = as.numeric(year),y = log(value+1))) + geom_point() + geom_smooth(method = "lm")+
facet_wrap(~study_village, scales = "free_y") +
theme_light()+stat_compare_means(method = "anova", label.y = 7)+ ylab("no.of beehives")+ xlab("year")
stat_poly_line() + stat_poly_eq(aes(label = paste(after_stat(eq.label), sep = "*\", \"*")))
lsc
goat_sheep<-lsc[,c(4,13, 14)]
ggplot(goat_sheep) + geom_boxplot(aes(study_village, goat_number), na.rm = FALSE)#boxplot
ggplot(goat_sheep) + geom_boxplot(aes(study_village, sheep_number), na.rm = FALSE)#boxplot
hy
View(hy)
hy_t
hy$`2021`
View(lsc)
goat_sheep
head(ggplot(goat_sheep) + geom_boxplot(aes(study_village, goat_number), na.rm = FALSE)#boxplot
)
head(goat_sheep)
goat_sheep$total<-cbind(apply(goat_sheep[,c(2,3)], 1, sum))
head(goat_sheep)
lsc
head(lsc)
hy
View(hy)
hy$`2021`
goat_sheep
View(goat_sheep)
#colnames(bc)[(4:8)]<-c("2009", "2011", "2017", "2019", "2021")
#bkc<-read.csv("../data/beekeeper_change.csv", check.names=FALSE)
#livestock change
lsc<-read.csv("../data/farmer_livestock.csv", sep=";",check.names=FALSE)
colnames(lsc)
lsc
goat_sheep<-lsc[,c(4,13, 14)]
goat_sheep[is.na(goat_sheep)] <- 0
goat_sheep$total<-cbind(apply(goat_sheep[,c(2,3)], 1, sum))
head(goat_sheep)
goat_sheep$mean<-cbind(apply(goat_sheep[,c(2,3)], 1, mean))
goat_sheep
tot.mean.gs<-goat_sheep %>% group_by(study_village) %>%
summarise(tot=sum(total), mean.ls=mean(total))
tot.mean.gs
hy
hy$`2021`
colnames(hy)
colnames[,c(2,5)]
hy[,c(2,5)]
hy_2001<-hy[,c(2,5)]
tot.mean.gs
tot.mean.gs[,1]<-name.vill
tot.mean.gs[,1]<-name.vill
hy[,c(2,5)]
tot.mean.gs[,1]
name.vill
tot.mean.gs[,1]<-name.vill
tot.mean.gs
tot.mean.gs2<-tot.mean.gs[,1]<-name.vill
hy_2001
i<-1
ids<-hy_t$study_village==name.vill[i]
hy_2001[,ids]
hy_2001[ids,1]
i<-1
ids<-hy_t$study_village==name.vill[i]
hy_2001[ids,1]
hy_2001[,1]
ids
i<-1
ids<-hy$study_village==name.vill[i]
hy_2001[,1]
hy$study_village
i<-1
ids<-hy$study_village==name.vill[i]
hy[ids,]
hy$study_village
ids
hy_2001[ids,1]
hy_2001[ids,]
tot.mean.gs2[ids,]
tot.mean.gs2
tot.mean.gs2[ids]
tot.mean.gs[,1]
tot.mean.gs
tot.mean.gs[ids,]
tot.mean.gs[i,]
cbind(hy_2001[ids,],tot.mean.gs[i,])
dat_2021<-cbind(hy_2001[ids,],tot.mean.gs[i,])
for (i in 1:name.vill){
i<-1
ids<-hy$study_village==name.vill[i]
dat_2021<-cbind(hy_2001[ids,],tot.mean.gs[i,])
}
for (i in 1:name.vill){
#i<-1
ids<-hy$study_village==name.vill[i]
dat_2021<-cbind(hy_2001[ids,],tot.mean.gs[i,])
}
cbind(hy_2001[ids,],tot.mean.gs[i,])
hy
dim(hy)
dat_2021
dat_2021<-matrix(0, 116, 4)
dat_2021<-matrix(0, 116, 4)
for (i in 1:name.vill){
#i<-1
ids<-hy$study_village==name.vill[i]
dat_2021[ids,]<-cbind(hy_2001[ids,],tot.mean.gs[i,])
}
name.vill
tot.mean.gs$study_village
tot.mean.gs
inner_join(hy_2001, tot.mean.gs, by=study_village)
df2 <- hy_2001 %>% inner_join(tot.mean.gs, by=study_village)
colnames(hy_2001)
colnames(tot.mean.gs)
merge(tot.mean.gs,hy_2001,by="study_village")
dat_2021
hy_2001<-hy[,c(2,5)]
tot.mean.gs
dat_2021<-merge(hy_2001,tot.mean.gs,by="study_village")
dat_2021
hy_2021<-hy[,c(2,5)]
dat_2021<-merge(hy_2021,tot.mean.gs,by="study_village")
hy_2021
colnames(hy_2021)
hy_2021 %>% group_by(study_village) %>% summarise(mean.hy=mean(2021))
names(dat_2021)
names(hy_2021)
hy_2021 %>% group_by(study_village) %>% summarise(mean.hy=mean(2021))
hy_2021
mean_hy_2021 %>% group_by(study_village) %>% summarise(mean.2021=mean(2021))
hy %>% group_by(study_village) %>% summarise(mean.2021=mean(2021))
colnames(hy)
hy %>% group_by(study_village) %>% summarise(mean.2021=mean("2021"))
colnames(hy)
hy %>% group_by(study_village) %>% summarise(mean.2021=mean(honey_change_years))
hy %>% group_by(study_village) %>% summarise(mean.2021=mean("2021"))
hy_2021
dat_2021
head(dat_2021)
tot.mean.gs
goat_sheep
head(goat_sheep)
tot.mean.gs
dat_2021
head(dat_2021)
lm(dat_2021$`2021`~dat_2021$mean.ls)
mod2<-lm(dat_2021$`2021`~dat_2021$mean.ls)
summary(mod2)
mod2<-lm(dat_2021$`2021`~dat_2021$tot.ls)
mod2<-lm(dat_2021$`2021`~dat_2021$tot)
summary(mod2)
tot.g
tot.s
head(goat_sheep)
mean.ls<-goat_sheep %>% group_by(study_village) %>%
summarise(mean.s=mean(sheep_number), mean.g=mean(goat_number))
mean.ls
name.vill<-unique(hy_t$study_village)
mean.ls[,1]<-name.vill
mean.ls
dat_2021<-merge(hy_2021, mean.ls, by="study_village")
dat_2021
head(dat_2021)
mod2<-lm(dat_2021$`2021`~dat_2021$mean.s*dat_2021$mean.g)
summary(mod2)
dat_2021
dat_2021
tot.ls<-goat_sheep %>% group_by(study_village) %>%
summarise(tot.s=tot(sheep_number), tot.g=tot(goat_number))
tot.ls<-goat_sheep %>% group_by(study_village) %>%
summarise(tot.s=sum(sheep_number), tot.g=sum(goat_number))
tot.ls
tot.ls[,1]<-name.vill
dat_2021<-merge(hy_2021, tot.ls, by="study_village")
mod3<-lm(dat_2021$`2021`~dat_2021$tot.s*dat_2021$tot.g)
summary(mod3)
head(dat_2021)
dat_2021 %>% ggplot(aes(x = as.numeric(2001),y = tot.g)
dat_2021 %>% ggplot(aes(x = as.numeric(2001),y = tot.s))
dat_2021 %>% ggplot(aes(x = 2001,y = tot.s))
dat_2021 %>% ggplot(aes(x = 2001,y = tot.s)) + geom_jitter(shape=16, position=position_jitter(0.1), alpha=0.3)+ geom_smooth(method = "lm")+
theme_light()+stat_compare_means(method = "anova", label.y = 7)+ ylab("no. of beehives")+xlab("year")+
stat_poly_line() + stat_poly_eq(aes(label = paste(after_stat(eq.label), sep = "*\", \"*")))+xlab("year")
#+scale_x_continuous(breaks = scales::pretty_breaks(n = 5)), label="p-value: <0.001")
plot(dat_2021$`2021`~dat_2021$tot.s)
dat_2021 %>% ggplot(aes(x = 2001,y = tot.s))
dat_2021$`2021`
dat_2021$tot.s
plot(dat_2021$`2021`, dat_2021$tot.s)
dat_2021
ggplot(goat_sheep) + geom_boxplot(aes(study_village, goat_number), na.rm = FALSE)#boxplot
ggplot(goat_sheep) + geom_boxplot(aes(study_village, sheep_number), na.rm = FALSE)#boxplot
ggplot(goat_sheep) + geom_boxplot(aes(study_village, goat_number), na.rm = FALSE)#boxplot
ggplot(goat_sheep) + geom_boxplot(aes(study_village, sheep_number), na.rm = FALSE)#boxplot
hy
head(hy)
hy[,5]
head(hy)
id<-which(hy[,2]=="GADI")
id
hy[id,5]
ggplot(goat_sheep) + geom_boxplot(aes(study_village, sheep_number), na.rm = FALSE)#boxplot
ggplot(goat_sheep) + geom_boxplot(aes(study_village, goat_number), na.rm = FALSE)#boxplot
dat_2021$tot.s
dat_2021$mean.s
mean.ls
ggplot(goat_sheep) + geom_boxplot(aes(study_village, goat_number), na.rm = FALSE)#boxplot
ggplot(goat_sheep) + geom_boxplot(aes(study_village, sheep_number), na.rm = FALSE)#boxplot
goat_sheep
mean.ls<-goat_sheep %>% group_by(study_village) %>%
summarise(mean.s=mean(sheep_number), mean.g=mean(goat_number))
mean.ls
