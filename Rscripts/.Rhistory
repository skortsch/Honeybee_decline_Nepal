}
qq<-c()
for (i in 1:dim(hi_crop_fil2)[1]){
tt<-hi_crop_fil2
qq[i]<-paste0(tt[i,]$Crop ,"_", tt[i,]$Crop)
}
qq
q<-c()
for (i in 1:dim(vis.tot.sel)[1]){
tt<-vis.tot.sel
q[i]<-paste0(tt[i,]$Crop ,"_", tt[i,]$Crop)
}
q
df1<-cbind(vis.tot.sel, id=q)
df2<-cbind(hi_crop_fil2, id=qq)
head(df1)
head(df2)
df <- merge(df2, df1[,-c(1:2)], by = "id", all=TRUE)
df
hi_crop_fil2<-df[,-1]
hi_crop_fil2$n_nas <- ifelse(hi_crop_fil2$vQ==0, NA, hi_crop_fil2$vQ)
hi_crop_fil3<-hi_crop_fil2 %>% complete(Crop, Village)
hi_crop_fil3$n_nas <- ifelse(hi_crop_fil3$vQ==0, NA, hi_crop_fil3$vQ)
ggballoonplot(hi_crop_fil3, x = "Village", y = "Crop", size = "% visits",
fill = "% visits",
size.range = c(1, 13),
ggtheme = theme_bw(),
font.label = list(style="italic", size = 14, color = "black")) +
scale_fill_viridis_c(option = "C", name = "% visits")
hi_crop_fil3
hi_crop_fil2$n_nas <- ifelse(hi_crop_fil2$vQ==0, NA, hi_crop_fil2$vQ)
hi_crop_fil2
#all plants
hi_crop_fil2 <- hi_crop %>% filter(grepl("Phaseolus_vulgaris|Capsicum_sp.|Cucurbita_maxima|Malus_domestica|Glycine_max|Cucumis_sativus|Cyclanthera_pedata|Prunus_armeniaca|Solanum_lycopersicon|Fagopyrum tataricum|Brassica_alba|Solanum melongena|Prunus_persica|Pyrus_communis|Helianthus_annuus|Phaseolus_vulgaris|Phaseolus_coccineus|Cyphomandra_betacea|Vigna_unguiculata|Momordica_charantia|Amygdalus_communis|Macrotyloma_uniflorum|Vicia_faba", Crop))
vis.tot.sel <- vis.tot %>% filter(grepl("Phaseolus_vulgaris|Capsicum_sp.|Cucurbita_maxima|Malus_domestica|Glycine_max|Cucumis_sativus|Cyclanthera_pedata|Prunus_armeniaca|Solanum_lycopersicon|Fagopyrum tataricum|Brassica_alba|Solanum melongena|Prunus_persica|Pyrus_communis|Helianthus_annuus|Phaseolus_vulgaris|Phaseolus_coccineus|Cyphomandra_betacea|Vigna_unguiculata|Momordica_charantia|Amygdalus_communis|Macrotyloma_uniflorum|Vicia_faba", Crop))
vis.tot.sel
q<-c()
for (i in 1:dim(vis.tot.sel)[1]){
tt<-vis.tot.sel
q[i]<-paste0(tt[i,]$Crop ,"_", tt[i,]$Crop)
}
qq<-c()
for (i in 1:dim(hi_crop_fil2)[1]){
tt<-hi_crop_fil2
qq[i]<-paste0(tt[i,]$Crop ,"_", tt[i,]$Crop)
}
df1<-cbind(vis.tot.sel, id=q)
df2<-cbind(hi_crop_fil2, id=qq)
df <- merge(df2, df1[,-c(1:2)], by = "id", all=TRUE)
head(df)
View(df)
df1
q<-c()
for (i in 1:dim(vis.tot.sel)[1]){
tt<-vis.tot.sel
q[i]<-paste0(tt[i,]$Crop ,"_", tt[i,]$Village)
}
qq<-c()
for (i in 1:dim(hi_crop_fil2)[1]){
tt<-hi_crop_fil2
qq[i]<-paste0(tt[i,]$Crop ,"_", tt[i,]$Village)
}
df1<-cbind(vis.tot.sel, id=q)
df2<-cbind(hi_crop_fil2, id=qq)
df <- merge(df2, df1[,-c(1:2)], by = "id", all=TRUE)
hi_crop_fil2<-df[,-1]
df
hi_crop_fil2<-df[,-1]
hi_crop_fil2$n_nas <- ifelse(hi_crop_fil2$vQ==0, NA, hi_crop_fil2$vQ)
hi_crop_fil3<-hi_crop_fil2 %>% complete(Crop, Village)
hi_crop_fil3$n_nas <- ifelse(hi_crop_fil3$vQ==0, NA, hi_crop_fil3$vQ)
colnames(hi_crop_fil3)[7]<-"% visits"
ggplot(hi_crop_fil3, aes(x=Village, y=Crop, fill=n_nas)) +
geom_tile(color="white", size = 0.5) +
geom_text(aes(label = round(n_nas,  digits=2)), angle = 0, size=3) +
scale_fill_gradient(low="gold", high="darkorchid", na.value="white", name = "% visits")+
theme(axis.text.x = element_text(color = "black", size = 12, angle = 90))
ggballoonplot(hi_crop_fil3, x = "Village", y = "Crop", size = "% visits",
fill = "% visits",
size.range = c(1, 13),
ggtheme = theme_bw(),
font.label = list(style="italic", size = 14, color = "black")) +
scale_fill_viridis_c(option = "C", name = "% visits")
hi_crop_fil3
colnames(hi_crop_fil3)[8]<-"% visits"
hi_crop_fil2$n_nas <- ifelse(hi_crop_fil2$vQ==0, NA, hi_crop_fil2$vQ)
hi_crop_fil3<-hi_crop_fil2 %>% complete(Crop, Village)
hi_crop_fil3$n_nas <- ifelse(hi_crop_fil3$vQ==0, NA, hi_crop_fil3$vQ)
colnames(hi_crop_fil3)[7]<-"% visits"
hi_crop_fil2$n_nas <- ifelse(hi_crop_fil2$vQ==0, NA, hi_crop_fil2$vQ)
hi_crop_fil3<-hi_crop_fil2 %>% complete(Crop, Village)
hi_crop_fil3$n_nas <- ifelse(hi_crop_fil3$vQ==0, NA, hi_crop_fil3$vQ)
colnames(hi_crop_fil3)[7]<-"Tot.visits"
colnames(hi_crop_fil3)[8]<-"% visits"
ggballoonplot(hi_crop_fil3, x = "Village", y = "Crop", size = "% visits",
fill = "% visits",
size.range = c(1, 13),
ggtheme = theme_bw(),
font.label = list(style="italic", size = 14, color = "black")) +
scale_fill_viridis_c(option = "C", name = "% visits")
head(hi_crop_fil3)
ggballoonplot(hi_crop_fil3, x = "Village", y = "Crop", size = "% visits",
fill = "Tot.visits",
size.range = c(1, 13),
ggtheme = theme_bw(),
font.label = list(style="italic", size = 14, color = "black")) +
scale_fill_viridis_c(option = "C", name = "% visits")
ggballoonplot(hi_crop_fil3, x = "Village", y = "Crop", size = "Tot.visits",
fill = "% visits",
size.range = c(1, 13),
ggtheme = theme_bw(),
font.label = list(style="italic", size = 14, color = "black")) +
scale_fill_viridis_c(option = "C", name = "% visits")
ggsave(paste0(dirF, "heatmap_prop_vis_Apis.png"),width=8, height = 6, units="in", dpi=600 )
ggballoonplot(hi_crop_fil3, x = "Village", y = "Crop", size = "Tot.visits",
fill = "% visits",
size.range = c(1, 13),
ggtheme = theme_bw(),
font.label = list(style="italic", size = 13, color = "black")) +
scale_fill_viridis_c(option = "C", name = "% visits")
ggballoonplot(hi_crop_fil3, x = "Village", y = "Crop", size = "Tot.visits",
fill = "% visits",
size.range = c(1, 13),
ggtheme = theme_bw(),
font.label = list(style="italic", size = 12, color = "black")) +
scale_fill_viridis_c(option = "C", name = "% visits")
hi_crop
pd
pl.sel$sci_name <- sub(" ", "_", pl.sel$sci_name)
pd<-read.csv("../data/poll_dependence.csv", sep=";",check.names=FALSE)
head(pd)
pd$sci_name <- sub(" ", "_", pd$sci_name)
pd
head(pd)
hi_crop
head(hi_crop)
colnames(pd)
colnames(pd)[2]<-"Crop"
head(pd)
pd[,c(1,4)]
a<-pd[,c(1,4)]
eng<-pd[,c(1,4)]
df <- merge(eng, hi_crop, by = "Crop", all=TRUE)
head(eng)
head(hi_crop)
eng<-pd[,c(2,4)]
hi_crop <- merge(eng, hi_crop, by = "Crop", all=TRUE)
hi_crop
#all plants
hi_crop_fil2 <- hi_crop %>% filter(grepl("Phaseolus_vulgaris|Capsicum_sp.|Cucurbita_maxima|Malus_domestica|Glycine_max|Cucumis_sativus|Cyclanthera_pedata|Prunus_armeniaca|Solanum_lycopersicon|Fagopyrum tataricum|Brassica_alba|Solanum melongena|Prunus_persica|Pyrus_communis|Helianthus_annuus|Phaseolus_vulgaris|Phaseolus_coccineus|Cyphomandra_betacea|Vigna_unguiculata|Momordica_charantia|Amygdalus_communis|Macrotyloma_uniflorum|Vicia_faba", Crop))
hi_crop_fil2
hi_crop
#all plants
hi_crop_fil2 <- hi_crop %>% filter(grepl("Phaseolus_vulgaris|Capsicum_sp.|Cucurbita_maxima|Malus_domestica|Glycine_max|Cucumis_sativus|Cyclanthera_pedata|Prunus_armeniaca|Solanum_lycopersicon|Fagopyrum tataricum|Brassica_alba|Solanum melongena|Prunus_persica|Pyrus_communis|Helianthus_annuus|Phaseolus_vulgaris|Phaseolus_coccineus|Cyphomandra_betacea|Vigna_unguiculata|Momordica_charantia|Amygdalus_communis|Macrotyloma_uniflorum|Vicia_faba", Crop))
hi_crop_fil2
na.omit(hi_crop_fil2)
hi_crop_fil2<-na.omit(hi_crop_fil2)
vis.tot.sel <- vis.tot %>% filter(grepl("Phaseolus_vulgaris|Capsicum_sp.|Cucurbita_maxima|Malus_domestica|Glycine_max|Cucumis_sativus|Cyclanthera_pedata|Prunus_armeniaca|Solanum_lycopersicon|Fagopyrum tataricum|Brassica_alba|Solanum melongena|Prunus_persica|Pyrus_communis|Helianthus_annuus|Phaseolus_vulgaris|Phaseolus_coccineus|Cyphomandra_betacea|Vigna_unguiculata|Momordica_charantia|Amygdalus_communis|Macrotyloma_uniflorum|Vicia_faba", Crop))
q<-c()
for (i in 1:dim(vis.tot.sel)[1]){
tt<-vis.tot.sel
q[i]<-paste0(tt[i,]$Crop ,"_", tt[i,]$Village)
}
qq<-c()
for (i in 1:dim(hi_crop_fil2)[1]){
tt<-hi_crop_fil2
qq[i]<-paste0(tt[i,]$Crop ,"_", tt[i,]$Village)
}
df1<-cbind(vis.tot.sel, id=q)
df2<-cbind(hi_crop_fil2, id=qq)
df <- merge(df2, df1[,-c(1:2)], by = "id", all=TRUE)
df
hi_crop_fil2<-df[,-1]
hi_crop_fil2<-df[,-1]
hi_crop_fil2
hi_crop_fil2$n_nas <- ifelse(hi_crop_fil2$vQ==0, NA, hi_crop_fil2$vQ)
hi_crop_fil3<-hi_crop_fil2 %>% complete(Crop, Village)
hi_crop_fil3$n_nas <- ifelse(hi_crop_fil3$vQ==0, NA, hi_crop_fil3$vQ)
colnames(hi_crop_fil3)[7]<-"Tot.visits"
colnames(hi_crop_fil3)[8]<-"% visits"
hi_crop_fil3
hi_crop_fil2$n_nas <- ifelse(hi_crop_fil2$vQ==0, NA, hi_crop_fil2$vQ)
hi_crop_fil3<-hi_crop_fil2 %>% complete(Crop, Village)
hi_crop_fil3$n_nas <- ifelse(hi_crop_fil3$vQ==0, NA, hi_crop_fil3$vQ)
colnames(hi_crop_fil3)[8]<-"Tot.visits"
colnames(hi_crop_fil3)[9]<-"% visits"
hi_crop_fil3
ggplot(hi_crop_fil3, aes(x=Village, y=eng_name, fill=n_nas)) +
geom_tile(color="white", size = 0.5) +
geom_text(aes(label = round(n_nas,  digits=2)), angle = 0, size=3) +
scale_fill_gradient(low="gold", high="darkorchid", na.value="white", name = "% visits")+
theme(axis.text.x = element_text(color = "black", size = 12, angle = 90))
ggballoonplot(hi_crop_fil3, x = "Village", y = "eng_name", size = "Tot.visits",
fill = "% visits",
size.range = c(1, 13),
ggtheme = theme_bw(),
font.label = list(style="italic", size = 12, color = "black")) +
scale_fill_viridis_c(option = "C", name = "% visits")
hi_crop_fil3
hi_crop_fil3$eng_name
View(hi_crop_fil3)
hi_crop_fil3<-na.omit(hi_crop_fil3)
ggballoonplot(hi_crop_fil3, x = "Village", y = "eng_name", size = "Tot.visits",
fill = "% visits",
size.range = c(1, 13),
ggtheme = theme_bw(),
font.label = list(style="italic", size = 12, color = "black")) +
scale_fill_viridis_c(option = "C", name = "% visits")
ggsave(paste0(dirF, "heatmap_prop_vis_Apis_eng_names.png"),width=8, height = 6, units="in", dpi=600 )
ggsave(paste0(dirF, "heatmap_prop_vis_Apis_eng_names.png"),width=8, height = 6, units="in", dpi=600 )
#honey yield change data file
hy<-read.csv("../data/honey_yield_change.csv", sep=";",check.names=FALSE)
colnames(hy)
head(hy)
#beehive change
bc<-read.csv("../data/beehive_change.csv", sep=";",check.names=FALSE)
bc
head(bc)
colnames(bc)
#colnames(bc)[(4:8)]<-c("2009", "2011", "2017", "2019", "2021")
#bkc<-read.csv("../data/beekeeper_change.csv", check.names=FALSE)
#livestock change
lsc<-read.csv("../data/farmer_livestock.csv", sep=";",check.names=FALSE)
colnames(lsc)
lsc
#apple change
apl<-read.csv("../data/apple_change.csv", sep=";",check.names=FALSE)
colnames(apl)
apl
#reasons for the decline
rd<-read.csv("../data/reasons_decline.csv", sep=";",check.names=FALSE)
colnames(rd)
rd
#reasons for the fewer flowers
lf<-read.csv("../data/reasons_less_flowers.csv", sep=";",check.names=FALSE)
colnames(lf)
lf
bi<-read.csv("../data/Beekeeping_income.csv", sep=";",check.names=FALSE)
head(bi)
summary(bi$income_per_hive)
hist(bi$income_per_hive)
as_tibble(bi) %>% filter(income_per_hive) %>% drop_na()
summary(bi.sel$income_per_hive)
summary(bi.sel2$income_per_hive)
#convert table honey yield
#hy_t <- pivot_longer(hy[,-2],cols = c("2011.y.before", "2011y", "2017y","2019y","2021y"), names_to = "year")
hy_t <- pivot_longer(hy[,],cols = c("2009", "2012", "2017", "2019", "2021"), names_to = "year")
#convert table honey yield
#hy_t <- pivot_longer(hy[,-2],cols = c("2011.y.before", "2011y", "2017y","2019y","2021y"), names_to = "year")
hy_t <- pivot_longer(hy[,],cols = c("2009", "2012", "2017", "2019", "2021"), names_to = "year")
hy_t
y = log(hy_t$value+1)
x = as.numeric(hy_t$year)
hy_lm <- lm(y~x)
summary(hy_lm)
pred_x = c(min(x),rep(max(x),2),max(x)+5)
pred_lines = data.frame(x=pred_x,
y=predict(hy_lm, data.frame(x=pred_x)),
obs_Or_Pred=rep(c("Obs","Pred"), each=2))
hy_plot<-ggplot(pred_lines, aes(x, y, colour=obs_Or_Pred, shape=obs_Or_Pred, linetype=obs_Or_Pred)) +
geom_jitter(data=data.frame(x,y, obs_Or_Pred="Obs"), size=3, position=position_jitter(0.1), alpha=0.3) +
geom_line(size=1) +scale_color_manual(values=c('grey50', 'black'))+
scale_shape_manual(values=c(16,NA)) +
ylab("Kg honey yield per hive")+xlab("Year")+
scale_x_continuous(breaks = scales::pretty_breaks(n = 5))+
theme_bw()+
theme(legend.title=element_blank())+
theme(axis.text.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title = element_text(size = 14)
)+
geom_label(aes(x = 2020, y = 3.2), hjust = 0, size=4,
label = paste("Adj R2 = ",signif(summary(hy_lm)$adj.r.squared, 5)," \nP =",signif(summary(hy_lm)$coef[2,4], 5)), show.legend = FALSE)
hy_plot
#BEEHIVE DECLINE
#convert table
#bh_t <- pivot_longer(bc[,-c(2,3)],cols = c("2011.y.before", "2011y", "2017y","2019y","2022y"), names_to = "year")
bh_t <- pivot_longer(bc[,],cols = c("2009", "2012", "2017","2019","2021", "2022"), names_to = "year")
y2 = log(bh_t$value+1)
x2 = as.numeric(bh_t$year)
bh_lm <- lm(y2~x2)
summary(bh_lm)
pred_x2 = c(min(x2),rep(max(x2),2),max(x2)+5)
pred_lines2 = data.frame(x2=pred_x2,
y2=predict(bh_lm, data.frame(x2=pred_x2)),
obs_Or_Pred=rep(c("Obs","Pred"), each=2))
bh_plot<-ggplot(pred_lines2, aes(x2, y2, colour=obs_Or_Pred, shape=obs_Or_Pred, linetype=obs_Or_Pred)) +
geom_jitter(data=data.frame(x2,y2, obs_Or_Pred="Obs"), size=3, position=position_jitter(0.1), alpha=0.3) +
geom_line(size=1) +scale_color_manual(values=c('grey50', 'black'))+
scale_shape_manual(values=c(16,NA)) +
ylab("Beehives per beekeeper")+xlab("Year")+
scale_x_continuous(breaks = scales::pretty_breaks(n = 5))+
theme_bw()+
theme(legend.title=element_blank())+
theme(axis.text.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title = element_text(size = 14)
)+
geom_text(aes(x = 2020, y = 4.4), hjust = 0, size=4,
label = paste("Adj R2 = ",signif(summary(bh_lm)$adj.r.squared, 5)," \nP =",signif(summary(bh_lm)$coef[2,4], 5)), show.legend = FALSE)
bh_plot
bh_plot
signif(summary(hy_lm)$adj.r.squared, 5)
paste("Adj R2 = ",signif(summary(hy_lm)$adj.r.squared, 3)
)
paste("Adj R2 = ",signif(summary(hy_lm)$adj.r.squared, 2)
)
hy_plot<-ggplot(pred_lines, aes(x, y, colour=obs_Or_Pred, shape=obs_Or_Pred, linetype=obs_Or_Pred)) +
geom_jitter(data=data.frame(x,y, obs_Or_Pred="Obs"), size=3, position=position_jitter(0.1), alpha=0.3) +
geom_line(size=1) +scale_color_manual(values=c('grey50', 'black'))+
scale_shape_manual(values=c(16,NA)) +
ylab("Kg honey yield per hive")+xlab("Year")+
scale_x_continuous(breaks = scales::pretty_breaks(n = 5))+
theme_bw()+
theme(legend.title=element_blank())+
theme(axis.text.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title = element_text(size = 14)
)+
geom_label(aes(x = 2020, y = 3.2), hjust = 0, size=4,
label = paste("Adj R2 = ",signif(summary(hy_lm)$adj.r.squared, 2)," \nP =",signif(summary(hy_lm)$coef[2,4], 5)), show.legend = FALSE)
hy_plot
hy_plot<-ggplot(pred_lines, aes(x, y, colour=obs_Or_Pred, shape=obs_Or_Pred, linetype=obs_Or_Pred)) +
geom_jitter(data=data.frame(x,y, obs_Or_Pred="Obs"), size=3, position=position_jitter(0.1), alpha=0.3) +
geom_line(size=1) +scale_color_manual(values=c('grey50', 'black'))+
scale_shape_manual(values=c(16,NA)) +
ylab("Kg honey yield per hive")+xlab("Year")+
scale_x_continuous(breaks = scales::pretty_breaks(n = 5))+
theme_bw()+
theme(legend.title=element_blank())+
theme(axis.text.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title = element_text(size = 14)
)+
geom_label(aes(x = 2020, y = 3.2), hjust = 0, size=4,
label = paste("Adj R2 = ",signif(summary(hy_lm)$adj.r.squared, 2)," \nP =",signif(summary(hy_lm)$coef[2,4], 2)), show.legend = FALSE)
hy_plot
annotations <- data.frame(
X = c(-Inf,-Inf,Inf,Inf),
Y =  c(-Inf, Inf,-Inf,Inf),
text = c("(x0,y0)","(x0,y1)",
"(x1,y0)","(x1,y1)"),
x_adjust = c(0,0,1,1),
y_adjust = c(0,1,0,1))
annotations
hy_plot<-ggplot(pred_lines, aes(x, y, colour=obs_Or_Pred, shape=obs_Or_Pred, linetype=obs_Or_Pred)) +
geom_jitter(data=data.frame(x,y, obs_Or_Pred="Obs"), size=3, position=position_jitter(0.1), alpha=0.3) +
geom_line(size=1) +scale_color_manual(values=c('grey50', 'black'))+
scale_shape_manual(values=c(16,NA)) +
ylab("Kg honey yield per hive")+xlab("Year")+
scale_x_continuous(breaks = scales::pretty_breaks(n = 5))+
theme_bw()+
theme(legend.title=element_blank())+
theme(axis.text.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title = element_text(size = 14)
)+
geom_text(vjust = "top", hjust="right", size=4,
label = paste("Adj R2 = ",signif(summary(hy_lm)$adj.r.squared, 2)," \nP =",signif(summary(hy_lm)$coef[2,4], 2)), show.legend = FALSE)
hy_plot
hy_plot<-ggplot(pred_lines, aes(x, y, colour=obs_Or_Pred, shape=obs_Or_Pred, linetype=obs_Or_Pred)) +
geom_jitter(data=data.frame(x,y, obs_Or_Pred="Obs"), size=3, position=position_jitter(0.1), alpha=0.3) +
geom_line(size=1) +scale_color_manual(values=c('grey50', 'black'))+
scale_shape_manual(values=c(16,NA)) +
ylab("Kg honey yield per hive")+xlab("Year")+
scale_x_continuous(breaks = scales::pretty_breaks(n = 5))+
theme_bw()+
theme(legend.title=element_blank())+
theme(axis.text.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title = element_text(size = 14)
)+
geom_label(aes(x = 2020, y = 3.2), hjust = 0, size=4,
label = paste("Adj R2 = ",signif(summary(hy_lm)$adj.r.squared, 2)," \nP =",signif(summary(hy_lm)$coef[2,4], 2)), show.legend = FALSE)
hy_plot
hy_plot<-ggplot(pred_lines, aes(x, y, colour=obs_Or_Pred, shape=obs_Or_Pred, linetype=obs_Or_Pred)) +
geom_jitter(data=data.frame(x,y, obs_Or_Pred="Obs"), size=3, position=position_jitter(0.1), alpha=0.3) +
geom_line(size=1) +scale_color_manual(values=c('grey50', 'black'))+
scale_shape_manual(values=c(16,NA)) +
ylab("Kg honey yield per hive")+xlab("Year")+
scale_x_continuous(breaks = scales::pretty_breaks(n = 5))+
theme_bw()+
theme(legend.title=element_blank())+
theme(axis.text.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title = element_text(size = 14)
)+
geom_label(aes(x = 2021, y = 3.3), hjust = 0, size=4,
label = paste("Adj R2 = ",signif(summary(hy_lm)$adj.r.squared, 2)," \nP =",signif(summary(hy_lm)$coef[2,4], 2)), show.legend = FALSE)
hy_plot
hy_plot<-ggplot(pred_lines, aes(x, y, colour=obs_Or_Pred, shape=obs_Or_Pred, linetype=obs_Or_Pred)) +
geom_jitter(data=data.frame(x,y, obs_Or_Pred="Obs"), size=3, position=position_jitter(0.1), alpha=0.3) +
geom_line(size=1) +scale_color_manual(values=c('grey50', 'black'))+
scale_shape_manual(values=c(16,NA)) +
ylab("Kg honey yield per hive")+xlab("Year")+
scale_x_continuous(breaks = scales::pretty_breaks(n = 5))+
theme_bw()+
theme(legend.title=element_blank())+
theme(axis.text.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title = element_text(size = 14)
)+
geom_label(aes(x = 2021, y = 3.2), hjust = 0, size=4,
label = paste("Adj R2 = ",signif(summary(hy_lm)$adj.r.squared, 2)," \nP =",signif(summary(hy_lm)$coef[2,4], 2)), show.legend = FALSE)
hy_plot
bh_plot<-ggplot(pred_lines2, aes(x2, y2, colour=obs_Or_Pred, shape=obs_Or_Pred, linetype=obs_Or_Pred)) +
geom_jitter(data=data.frame(x2,y2, obs_Or_Pred="Obs"), size=3, position=position_jitter(0.1), alpha=0.3) +
geom_line(size=1) +scale_color_manual(values=c('grey50', 'black'))+
scale_shape_manual(values=c(16,NA)) +
ylab("Beehives per beekeeper")+xlab("Year")+
scale_x_continuous(breaks = scales::pretty_breaks(n = 5))+
theme_bw()+
theme(legend.title=element_blank())+
theme(axis.text.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title = element_text(size = 14))+
geom_label(aes(x = 2021, y = 4.2), hjust = 0, size=4,
label = paste("Adj R2 = ",signif(summary(bh_lm)$adj.r.squared, 2)," \nP =",signif(summary(bh_lm)$coef[2,4], 2)), show.legend = FALSE)
bh_plot
bh_plot<-ggplot(pred_lines2, aes(x2, y2, colour=obs_Or_Pred, shape=obs_Or_Pred, linetype=obs_Or_Pred)) +
geom_jitter(data=data.frame(x2,y2, obs_Or_Pred="Obs"), size=3, position=position_jitter(0.1), alpha=0.3) +
geom_line(size=1) +scale_color_manual(values=c('grey50', 'black'))+
scale_shape_manual(values=c(16,NA)) +
ylab("Beehives per beekeeper")+xlab("Year")+
scale_x_continuous(breaks = scales::pretty_breaks(n = 5))+
theme_bw()+
theme(legend.title=element_blank())+
theme(axis.text.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title = element_text(size = 14))+
geom_label(aes(x = 2021.5, y = 4.4), hjust = 0, size=4,
label = paste("Adj R2 = ",signif(summary(bh_lm)$adj.r.squared, 2)," \nP =",signif(summary(bh_lm)$coef[2,4], 2)), show.legend = FALSE)
bh_plot
bh_plot<-ggplot(pred_lines2, aes(x2, y2, colour=obs_Or_Pred, shape=obs_Or_Pred, linetype=obs_Or_Pred)) +
geom_jitter(data=data.frame(x2,y2, obs_Or_Pred="Obs"), size=3, position=position_jitter(0.1), alpha=0.3) +
geom_line(size=1) +scale_color_manual(values=c('grey50', 'black'))+
scale_shape_manual(values=c(16,NA)) +
ylab("Beehives per beekeeper")+xlab("Year")+
scale_x_continuous(breaks = scales::pretty_breaks(n = 5))+
theme_bw()+
theme(legend.title=element_blank())+
theme(axis.text.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title = element_text(size = 14))+
geom_label(aes(x = 2021.5, y = 4.45), hjust = 0, size=4,
label = paste("Adj R2 = ",signif(summary(bh_lm)$adj.r.squared, 2)," \nP =",signif(summary(bh_lm)$coef[2,4], 2)), show.legend = FALSE)
bh_plot
Fig_hy_bh<-ggarrange(hy_plot, bh_plot, widths = c( 6, 6), labels = c("a", "b"),
font.label = list(size = 16, color = "black"), ncol = 2, common.legend = TRUE, legend="top")
annotate_figure(Fig_hy_bh)
Fig_hy_bh<-ggarrange(hy_plot, bh_plot, widths = c(8, 8), labels = c("a", "b"),
font.label = list(size = 16, color = "black"), ncol = 2, common.legend = TRUE, legend="top")
annotate_figure(Fig_hy_bh)
Fig_hy_bh<-ggarrange(hy_plot, bh_plot, widths = c(5, 5), labels = c("a", "b"),
font.label = list(size = 16, color = "black"), ncol = 2, common.legend = TRUE, legend="top")
annotate_figure(Fig_hy_bh)
annotate_figure(Fig_hy_bh)
Fig_hy_bh
Fig_hy_bh<-ggarrange(hy_plot, bh_plot, widths = c(1, 1),  labels = c("a", "b"),
font.label = list(size = 16, color = "black"), ncol = 2, common.legend = TRUE, legend="top")
annotate_figure(Fig_hy_bh)
Fig_hy_bh<-ggarrange(hy_plot, bh_plot, labels = c("a", "b"),
font.label = list(size = 16, color = "black"), ncol = 2, common.legend = TRUE, legend="top")
annotate_figure(Fig_hy_bh)
bh_plot<-ggplot(pred_lines2, aes(x2, y2, colour=obs_Or_Pred, shape=obs_Or_Pred, linetype=obs_Or_Pred)) +
geom_jitter(data=data.frame(x2,y2, obs_Or_Pred="Obs"), size=3, position=position_jitter(0.1), alpha=0.3) +
geom_line(size=1) +scale_color_manual(values=c('grey50', 'black'))+
scale_shape_manual(values=c(16,NA)) +
ylab("Beehives per beekeeper")+xlab("Year")+
scale_x_continuous(breaks = scales::pretty_breaks(n = 5))+
theme_bw()+
theme(legend.title=element_blank())+
theme(axis.text.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title = element_text(size = 14))+
geom_label(aes(x = 2010, y = 4.45), hjust = 0, size=4,
label = paste("Adj R2 = ",signif(summary(bh_lm)$adj.r.squared, 2)," \nP =",signif(summary(bh_lm)$coef[2,4], 2)), show.legend = FALSE)
bh_plot
bh_plot<-ggplot(pred_lines2, aes(x2, y2, colour=obs_Or_Pred, shape=obs_Or_Pred, linetype=obs_Or_Pred)) +
geom_jitter(data=data.frame(x2,y2, obs_Or_Pred="Obs"), size=3, position=position_jitter(0.1), alpha=0.3) +
geom_line(size=1) +scale_color_manual(values=c('grey50', 'black'))+
scale_shape_manual(values=c(16,NA)) +
ylab("Beehives per beekeeper")+xlab("Year")+
scale_x_continuous(breaks = scales::pretty_breaks(n = 5))+
theme_bw()+
theme(legend.title=element_blank())+
theme(axis.text.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title = element_text(size = 14))+
geom_label(aes(x = 2009, y = 4.45), hjust = 0, size=4,
label = paste("Adj R2 = ",signif(summary(bh_lm)$adj.r.squared, 2)," \nP =",signif(summary(bh_lm)$coef[2,4], 2)), show.legend = FALSE)
bh_plot
hy_plot<-ggplot(pred_lines, aes(x, y, colour=obs_Or_Pred, shape=obs_Or_Pred, linetype=obs_Or_Pred)) +
geom_jitter(data=data.frame(x,y, obs_Or_Pred="Obs"), size=3, position=position_jitter(0.1), alpha=0.3) +
geom_line(size=1) +scale_color_manual(values=c('grey50', 'black'))+
scale_shape_manual(values=c(16,NA)) +
ylab("Kg honey yield per hive")+xlab("Year")+
scale_x_continuous(breaks = scales::pretty_breaks(n = 5))+
theme_bw()+
theme(legend.title=element_blank())+
theme(axis.text.y = element_text(size = 14),
axis.text.x = element_text(size = 14),
axis.title = element_text(size = 14)
)+
geom_label(aes(x = 2009, y = 3.2), hjust = 0, size=4,
label = paste("Adj R2 = ",signif(summary(hy_lm)$adj.r.squared, 2)," \nP =",signif(summary(hy_lm)$coef[2,4], 2)), show.legend = FALSE)
hy_plot
Fig_hy_bh<-ggarrange(hy_plot, bh_plot, labels = c("a", "b"),
font.label = list(size = 16, color = "black"), ncol = 2, common.legend = TRUE, legend="top")
annotate_figure(Fig_hy_bh)
ggsave(paste0(dirF, "hy_bh_decline.png"),width=8, height = 8, units="in", dpi=600 )
ggsave(paste0(dirF, "hy_bh_decline.png"),width=8, height = 6, units="in", dpi=600 )
