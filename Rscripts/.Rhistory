#only keep the five most important
bi_reorder_keep2 <-bi_reorder2 %>% filter(rank<6)
#a<-bi_reorder_keep %>% group_by(Crop, rank) %>% summarize(rank = n())
tt<-table(bi_reorder_keep2[,c(1,8)]) #column 8
tt2<-t[order(tt[,1], decreasing=TRUE),]
tab_rank<-as.data.frame(tt2)
tab_rank2<-tab_rank[order(tab_rank$rank, decreasing=FALSE),]
tab_rank2
tab_rank2$n_nas <- ifelse(tab_rank2$Freq==0, NA, tab_rank2$Freq)
ggplot(tab_rank2, aes(x=rank, y=Crop, fill=n_nas)) +
geom_tile(color="white", size = 0.25) +
geom_text(aes(label = Freq)) +
scale_fill_gradient(low="gold", high="darkorchid", na.value="white")
tab_rank2 %>% group_by(rank) %>% mutate(order = dense_rank(asc(Freq)))
#rank the most important crops for bees by village
bi_reorder2<-bee_import_pc_mean%>% arrange(Village, desc(Importance2)) %>% group_by(Village) %>%  mutate(rank = dense_rank(desc(Importance2)))
#only keep the five most important
bi_reorder_keep2 <-bi_reorder2 %>% filter(rank<6)
#a<-bi_reorder_keep %>% group_by(Crop, rank) %>% summarize(rank = n())
tt<-table(bi_reorder_keep2[,c(1,8)]) #column 8
tt2<-t[order(tt[,1], decreasing=TRUE),]
tab_rank<-as.data.frame(tt2)
tab_rank2<-tab_rank[order(tab_rank$rank, decreasing=FALSE),]
tab_rank2$n_nas <- ifelse(tab_rank2$Freq==0, NA, tab_rank2$Freq)
ggplot(tab_rank2, aes(x=rank, y=Crop, fill=n_nas)) +
geom_tile(color="white", size = 0.25) +
geom_text(aes(label = Freq)) +
scale_fill_gradient(low="gold", high="darkorchid", na.value="white")
tab_rank2 %>% group_by(rank) %>% mutate(order = dense_rank(asc(Freq)))
tab_rank2
tab_rank2 %>% group_by(rank) %>% mutate(order = dense_rank(asc(Freq)))
tab_rank2 %>% group_by(rank) %>% mutate(order = dense_rank(desc(Freq)))
tab_rank2<-tab_rank[order(tab_rank$rank, decreasing=FALSE),]
tab_rank2$n_nas <- ifelse(tab_rank2$Freq==0, NA, tab_rank2$Freq)
ggplot(tab_rank2, aes(x=rank, y=Crop, fill=n_nas)) +
geom_tile(color="white", size = 0.25) +
geom_text(aes(label = Freq)) +
scale_fill_gradient(low="gold", high="darkorchid", na.value="white")
#arrange data by village and descending importance of plants for honeybees
bi_reorder<-bee_import %>% arrange(Village, desc(Importance)) %>% group_by(Village) %>%  mutate(rank = dense_rank(desc(Importance)))
bi_reorder_keep <-bi_reorder %>% filter(rank<6)
#a<-bi_reorder_keep %>% group_by(Crop, rank) %>% summarize(rank = n())
t<-table(bi_reorder_keep[,c(1,7)]) #make frequency table of ranks
t2<-t[order(t[,1], decreasing=TRUE),]
tab_rank<-as.data.frame(t2) #change the format
head(tab_rank)
tab_rank2<-tab_rank[order(tab_rank$rank, decreasing=FALSE),] #
head(tab_rank2)
ggplot(tab_rank2, aes(x=rank, y=Crop, fill=n_nas)) +
geom_tile(color="white", size = 0.25) +
geom_text(aes(label = Freq)) +
scale_fill_gradient(low="gold", high="darkorchid", na.value="white")
tab_rank2$n_nas <- ifelse(tab_rank2$Freq==0, NA, tab_rank2$Freq)
ggplot(tab_rank2, aes(x=rank, y=Crop, fill=n_nas)) +
geom_tile(color="white", size = 0.25) +
geom_text(aes(label = Freq)) +
scale_fill_gradient(low="gold", high="darkorchid", na.value="white")
ttab_rank<-as.data.frame(tt2)
ttab_rank2<-ttab_rank[order(tab_rank$rank, decreasing=FALSE),]
mean_pc<-bee_import %>% distinct(Village, pollen_capacity) %>%  summarise(mean_pc=mean(pollen_capacity))
bee_import2 <- bee_import %>% mutate(mean_pc)
Importance_mean_pc<-bee_import2 %>%  select(vF , vQ, mean_pc) %>%  rowwise() %>%   mutate(Importance2= prod(c_across()))
bee_import_pc_mean <- bind_cols(bee_import,Importance_mean_pc[,c(3,4)])
#rank the most important crops for bees by village
bi_reorder2<-bee_import_pc_mean%>% arrange(Village, desc(Importance2)) %>% group_by(Village) %>%  mutate(rank = dense_rank(desc(Importance2)))
#only keep the five most important
bi_reorder_keep2 <-bi_reorder2 %>% filter(rank<6)
#a<-bi_reorder_keep %>% group_by(Crop, rank) %>% summarize(rank = n())
tt<-table(bi_reorder_keep2[,c(1,8)]) #column 8
tt2<-t[order(tt[,1], decreasing=TRUE),]
ttab_rank<-as.data.frame(tt2)
ttab_rank2<-ttab_rank[order(tab_rank$rank, decreasing=FALSE),]
ttab_rank2$n_nas <- ifelse(ttab_rank2$Freq==0, NA, tab_rank2$Freq)
ttab_rank2
ggplot(ttab_rank2, aes(x=rank, y=Crop, fill=n_nas)) +
geom_tile(color="white", size = 0.25) +
geom_text(aes(label = Freq)) +
scale_fill_gradient(low="gold", high="darkorchid", na.value="white")
bee_import<-read.table("../data/honeybee_importance_percrop_pervillage.txt", header=T)
############################################
#procedure for mean pollen capacity
#average unique pollen capacity
mean_pc<-bee_import %>% distinct(Village, pollen_capacity) %>%  summarise(mean_pc=mean(pollen_capacity))
bee_import2 <- bee_import %>% mutate(mean_pc)
Importance_mean_pc<-bee_import2 %>%  select(vF , vQ, mean_pc) %>%  rowwise() %>%   mutate(Importance2= prod(c_across()))
bee_import_pc_mean <- bind_cols(bee_import,Importance_mean_pc[,c(3,4)])
bi_reorder2<-bee_import_pc_mean%>% arrange(Village, desc(Importance2)) %>% group_by(Village) %>%  mutate(rank = dense_rank(desc(Importance2)))
#only keep the five most important
bi_reorder_keep2 <-bi_reorder2 %>% filter(rank<6)
#a<-bi_reorder_keep %>% group_by(Crop, rank) %>% summarize(rank = n())
tt<-table(bi_reorder_keep2[,c(1,8)]) #column 8
tt2<-t[order(tt[,1], decreasing=TRUE),]
ttab_rank<-as.data.frame(tt2)
ttab_rank2<-ttab_rank[order(tab_rank$rank, decreasing=FALSE),]
# %>% group_by(rank) %>% mutate(order = dense_rank(desc(Freq)))
ttab_rank2$n_nas <- ifelse(ttab_rank2$Freq==0, NA, tab_rank2$Freq)
ttab_rank2
ggplot(ttab_rank2, aes(x=rank, y=Crop, fill=n_nas)) +
geom_tile(color="white", size = 0.25) +
geom_text(aes(label = Freq)) +
scale_fill_gradient(low="gold", high="darkorchid", na.value="white")
ttab_rank2
ttab_rank2$n_nas <- ifelse(ttab_rank2$Freq==0, NA, ttab_rank2$Freq)
ggplot(ttab_rank2, aes(x=rank, y=Crop, fill=n_nas)) +
geom_tile(color="white", size = 0.25) +
geom_text(aes(label = Freq)) +
scale_fill_gradient(low="gold", high="darkorchid", na.value="white")
ttab_rank2 %>% group_by(rank) %>% mutate(order = dense_rank(desc(Freq)))
ttab_rank2 %>% group_by(rank) %>% dense_rank(desc(Freq))
tab_rank2
ttab_rank2
ttab_rank2<-ttab_rank[order(ttab_rank$rank, decreasing=FALSE),]
ttab_rank2
ttab_rank2<-ttab_rank[order(ttab_rank$rank, decreasing=FALSE),]
ttab_rank2
tab_rank2
head(tab_rank)
t2
tt2
bi_reorder_keep2
#a<-bi_reorder_keep %>% group_by(Crop, rank) %>% summarize(rank = n())
tt<-table(bi_reorder_keep2[,c(1,9)]) #column 8
tt2<-t[order(tt[,1], decreasing=TRUE),]
tt2
ttab_rank<-as.data.frame(tt2)
ttab_rank2<-ttab_rank[order(ttab_rank$rank, decreasing=FALSE),]
ttab_rank2$n_nas <- ifelse(ttab_rank2$Freq==0, NA, ttab_rank2$Freq)
ggplot(ttab_rank2, aes(x=rank, y=Crop, fill=n_nas)) +
geom_tile(color="white", size = 0.25) +
geom_text(aes(label = Freq)) +
scale_fill_gradient(low="gold", high="darkorchid", na.value="white")
ggsave(paste0(dirF, "heatmap_importance2.png"),width=8, height = 10, units="in", dpi=600 )
ggplot(ttab_rank2, aes(x=rank, y=Crop, fill=n_nas)) +
geom_tile(color="white", size = 0.25) +
geom_text(aes(label = Freq)) +
scale_fill_gradient(low="gold", high="darkorchid", na.value="white")
'ggplot(ttab_rank2, aes(x=rank, y=Crop, fill=n_nas)) +
geom_tile(color="white", size = 0.25) +
geom_text(aes(label = Freq)) +
scale_fill_gradient("Rank freq", low="gold", high="darkorchid", na.value="white")
'
ggplot(ttab_rank2, aes(x=rank, y=Crop, fill=n_nas)) +
geom_tile(color="white", size = 0.25) +
geom_text(aes(label = Freq)) +
scale_fill_gradient("Rank freq", low="gold", high="darkorchid", na.value="white")
ggplot(ttab_rank2, aes(x=rank, y=Crop, fill=n_nas)) +
geom_tile(color="white", size = 0.25) +
geom_text(aes(label = Freq)) +
scale_fill_gradient("Rank  \n frequencies", low="gold", high="darkorchid", na.value="white")
ggplot(ttab_rank2, aes(x=rank, y=Crop, fill=n_nas)) +
geom_tile(color="white", size = 0.25) +
geom_text(aes(label = Freq)) +
scale_fill_gradient("Rank  \n freq", low="gold", high="darkorchid", na.value="white")
ggsave(paste0(dirF, "heatmap_importance2.png"),width=8, height = 10, units="in", dpi=600 )
#reasons for the fewer flowers
lf<-read.csv("../data/reasons_less_flowers.csv", sep=";",check.names=FALSE)
colnames(lf)
lf
#reasons for the fewer flowers
lf<-read.csv("../data/reasons_less_flowers.csv", sep=";",check.names=FALSE)
colnames(lf)
lf
colname's(lf)
lf
####### HONEY YIELD CHANGE PER HIVE DECLINE #########
#boxplot honey yield decline
boxplot(hy[, c(5:9)], ylab="kg honey per hive", xlab="years")#check data
#percentage decrease
length(which(hy$honey_yield_change=="decrease"))/116*100
#convert table honey yield
#hy_t <- pivot_longer(hy[,-2],cols = c("2011.y.before", "2011y", "2017y","2019y","2021y"), names_to = "year")
hy_t <- pivot_longer(hy[,],cols = c("2009", "2012", "2017", "2019", "2021"), names_to = "year")
#boxplots and histograms
ggplot(hy_t) + geom_boxplot(aes(year, value), na.rm = FALSE)#boxplot
ggplot(hy_t, aes(value)) + geom_histogram(binwidth = 0.2)#histogram
ggplot(hy_t, aes(value)) + geom_histogram(binwidth = 0.2)+ scale_x_log10()#hist log scale
ggplot(hy_t, aes(value)) + facet_wrap(~year, scales = 'free_x') + geom_histogram(binwidth = 0.2)+ scale_x_log10()#hist log scale per year
colnames(lf)
#reasons for fewer flowers
lf
#reasons for fewer flowers
head(lf)
lf<-lf[,c(3:dim(cc)[2])]
lf<-lf[,c(3:dim(lf)[2])]
#reasons for fewer flowers
head(lf)
number.lf<-round(apply(lf[,c(2:dim(cc)[2])], 2, sum, na.rm=T))
number.lf<-round(apply(lf[,c(2:dim(lf)[2])], 2, sum, na.rm=T))
percentage.lf<-round(apply(lf[,c(3:dim(lf)[2])], 2, sum, na.rm=T)/116*100)
#reasons for fewer flowers
head(lf)
names.lf<-colnames(lf[,c(3:dim(lf)[2])])
names.lf
lf2<-as.data.frame(cbind(names.lf, as.numeric(number.lf), as.numeric(percentage.lf)))
percentage.lf
number.lf
#reasons for fewer flowers
head(lf)
lf<-lf[,c(3:dim(lf)[2])]
number.lf<-round(apply(lf, 2, sum, na.rm=T))
percentage.lf<-round(apply(lf, 2, sum, na.rm=T)/116*100)
names.lf<-colnames(lf)
lf2<-as.data.frame(cbind(names.lf, as.numeric(number.lf), as.numeric(percentage.lf)))
colnames(cc2)<- c("names", "number", "perc")
lf2
colnames(lf2)<- c("names", "number", "perc")
ggplot(lf2, aes(x=fct_inorder(names), y=as.numeric(perc))) +
geom_bar(aes(fill =fct_inorder(names)), stat = "identity")+theme_bw()+ coord_flip()+
scale_fill_grey(start = 0.1, end = .9)+
theme(text = element_text(size = 16))+
ylab("percentage")+ xlab("")+
geom_text(aes(label=perc), vjust= 0.5, hjust = -0.1, size=4)+
theme(legend.position = "none")+
ggtitle("changes in climate")+
theme(axis.text.y = element_text(size = 16),
axis.title = element_text(size = 16),
axis.text.x = element_text(size = 16))
number.lf
lf
#reasons for fewer flowers
head(lf)
#reasons for fewer flowers
lf<-read.csv("../data/reasons_less_flowers.csv", sep=";",check.names=FALSE)
colnames(lf)
lf<-lf[,c(2:dim(lf)[2])]
number.lf<-round(apply(lf, 2, sum, na.rm=T))
percentage.lf<-round(apply(lf, 2, sum, na.rm=T)/116*100)
names.lf<-colnames(lf)
lf2<-as.data.frame(cbind(names.lf, as.numeric(number.lf), as.numeric(percentage.lf)))
colnames(lf2)<- c("names", "number", "perc")
lf2<-lf[,c(2:dim(lf)[2])]
lf2<-lf[,c(2:dim(lf)[2])]
head(lf2)
number.lf<-round(apply(lf2, 2, sum, na.rm=T))
percentage.lf<-round(apply(lf2, 2, sum, na.rm=T)/116*100)
names.lf<-colnames(lf2)
lf3<-as.data.frame(cbind(names.lf, as.numeric(number.lf), as.numeric(percentage.lf)))
colnames(lf3)<- c("names", "number", "perc")
ggplot(lf3, aes(x=fct_inorder(names), y=as.numeric(perc))) +
geom_bar(aes(fill =fct_inorder(names)), stat = "identity")+theme_bw()+ coord_flip()+
scale_fill_grey(start = 0.1, end = .9)+
theme(text = element_text(size = 16))+
ylab("percentage")+ xlab("")+
geom_text(aes(label=perc), vjust= 0.5, hjust = -0.1, size=4)+
theme(legend.position = "none")+
ggtitle("changes in climate")+
theme(axis.text.y = element_text(size = 16),
axis.title = element_text(size = 16),
axis.text.x = element_text(size = 16))
lf4<-lf3[order(as.numeric(lf3$number), decreasing = T), ]
ggplot(lf4, aes(x=fct_inorder(names), y=as.numeric(perc))) +
geom_bar(aes(fill =fct_inorder(names)), stat = "identity")+theme_bw()+ coord_flip()+
scale_fill_grey(start = 0.1, end = .9)+
theme(text = element_text(size = 16))+
ylab("percentage")+ xlab("")+
geom_text(aes(label=perc), vjust= 0.5, hjust = -0.1, size=4)+
theme(legend.position = "none")+
ggtitle("changes in climate")+
theme(axis.text.y = element_text(size = 16),
axis.title = element_text(size = 16),
axis.text.x = element_text(size = 16))
ggsave(paste0(dirF, "reasons_less_flowers.png"),width=8, height = 10, units="in", dpi=600 )
#apple change
apl<-read.csv("../data/apple_change.csv", sep=";",check.names=FALSE)
colnames(apl)
apl
#apple change
apl<-read.csv("../data/apple_change.csv", sep=";",check.names=FALSE)
colnames(apl)
apl
#apple change
apl<-read.csv("../data/apple_change.csv", sep=";",check.names=FALSE)
colnames(apl)
apl
apl$apple_yield_change
#### Apple decline question
#apple change
apl<-read.csv("../data/apple_change.csv", sep=";",check.names=FALSE)
colnames(apl)
apl
apl$apple_yield_change
apl[which(apl$apple_yield_change =="decrease"), 4]<-1
apl[which(apl$apple_yield_change =="increase"), 4]<-2
apl[which(apl$apple_yield_change=="no_change"), 4]<-3
apl[which(apl$apple_yield_change=="dont_know"), 4]<-4
apl[which(is.na(apl$apple_yield_change)), 4]<-5
bp_labs<-c('decrease', 'increase', 'no change', 'dont know', "NAs")
ap_quan_plot<-ggplot(apl, aes(x = as.numeric(apple_yield_change) )) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill=c("grey20", "grey40", "grey60", "grey70", "grey80"))+ theme_bw() +
scale_y_continuous(labels=scales::percent) +
geom_text(aes(label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5, size=6)+
theme(axis.text.x=element_text(size=14))+
theme(text = element_text(size = 16)) +
ylab("percentage")+ xlab("percieved apple yield change")
# +
# scale_x_discrete(labels=bp_labs)
ap_quan_plot
ap_quan_plot<-ggplot(apl, aes(x = as.numeric(apple_yield_change) )) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill=c("grey20", "grey40", "grey60", "grey70", "grey80"))+ theme_bw() +
scale_y_continuous(labels=scales::percent) +
geom_text(aes(label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5, size=6)+
theme(axis.text.x=element_text(size=14))+
theme(text = element_text(size = 16)) +
ggtitle("percieved apple yield change")
ylab("percentage")+ xlab("")
apl
ap_quan_plot<-ggplot(apl, aes(x = as.numeric(apple_yield_change) )) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill=c("grey20", "grey40", "grey60", "grey70", "grey80"))+ theme_bw() +
scale_y_continuous(labels=scales::percent) +
geom_text(aes(label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5, size=6)+
theme(axis.text.x=element_text(size=14))+
theme(text = element_text(size = 16)) +
ggtitle("percieved apple yield change")
ylab("percentage")+ xlab("")
ap_quan_plot<-ggplot(apl, aes(x = as.numeric(apple_yield_change) )) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill=c("grey20", "grey40", "grey60", "grey70", "grey80"))+ theme_bw() +
scale_y_continuous(labels=scales::percent) +
geom_text(aes(label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5, size=6)+
theme(axis.text.x=element_text(size=14))+
theme(text = element_text(size = 16)) +
ggtitle("percieved apple yield change")+
ylab("percentage")+ xlab("")
ap_quan_plot
bp_labs<-c('decrease', 'increase', 'no change', 'dont know', "NAs")
ap_quan_plot<-ggplot(apl, aes(x = as.numeric(apple_yield_change) )) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill=c("grey20", "grey40", "grey60", "grey70", "grey80"))+ theme_bw() +
scale_y_continuous(labels=scales::percent) +
geom_text(aes(label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5, size=6)+
theme(axis.text.x=element_text(size=14))+
theme(text = element_text(size = 16)) +
ggtitle("percieved apple yield change")+
ylab("percentage")+ xlab("")+
scale_x_discrete(labels=bp_labs)
ap_quan_plot
ap_quan_plot<-ggplot(apl, aes(x = as.numeric(apple_yield_change) )) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill=c("grey20", "grey40", "grey60", "grey70", "grey80"))+ theme_bw() +
scale_y_continuous(labels=scales::percent) +
geom_text(aes(label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5, size=6)+
theme(axis.text.x=element_text(size=14))+
theme(text = element_text(size = 16)) +
ggtitle("percieved apple yield change")+
ylab("percentage")+ xlab("")
geom_text(
aes(label = bc_labs, x = 0),
position = position_dodge(width = 0.9),
vjust = 1.5, size = 2.5)
ap_quan_plot
ap_quan_plot<-ggplot(apl, aes(x = as.numeric(apple_yield_change) )) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill=c("grey20", "grey40", "grey60", "grey70", "grey80"))+ theme_bw() +
scale_y_continuous(labels=scales::percent) +
geom_text(aes(label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5, size=6)+
theme(axis.text.x=element_text(size=14))+
theme(text = element_text(size = 16)) +
ggtitle("percieved apple yield change")+
ylab("percentage")+ xlab("")+
scale_x_discrete('decrease', 'increase', 'no change', 'dont know', "NAs")
ap_quan_plot
# +
ap_quan_plot<-ggplot(apl, aes(x = as.numeric(apple_yield_change) )) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill=c("grey20", "grey40", "grey60", "grey70", "grey80"))+ theme_bw() +
scale_y_continuous(labels=scales::percent) +
geom_text(aes(label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5, size=6)+
theme(axis.text.x=element_text(size=14))+
theme(text = element_text(size = 16)) +
ggtitle("percieved apple yield change")+
ylab("percentage")+ xlab("")+
scale_x_discrete(c('decrease', 'increase', 'no change', 'dont know', "NAs"))
ap_quan_plot
ap_quan_plot<-ggplot(apl, aes(x = as.numeric(apple_yield_change) )) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill=c("grey20", "grey40", "grey60", "grey70", "grey80"))+ theme_bw() +
scale_y_continuous(labels=scales::percent) +
geom_text(aes(label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5, size=6)+
theme(axis.text.x=element_text(size=14))+
theme(text = element_text(size = 16)) +
ggtitle("percieved apple yield change")+
ylab("percentage")+ xlab("")
ap_quan_plot
ap_quan_plot<-ggplot(apl, aes(x = as.numeric(apple_yield_change) )) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill=c("grey20", "grey40", "grey60", "grey70", "grey80"))+ theme_bw() +
scale_y_continuous(labels=scales::percent) +
geom_text(aes(label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5, size=6)+
theme(axis.text.x=element_text(size=14))+
theme(text = element_text(size = 16)) +
ggtitle("percieved apple yield change")+
ylab("percentage")+ xlab("")+
scale_x_discrete(labels=c('decrease', 'increase', 'no change', 'dont know', "NAs"))
ap_quan_plot
ap_quan_plot<-ggplot(apl, aes(x = as.numeric(apple_yield_change) )) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill=c("grey20", "grey40", "grey60", "grey70", "grey80"))+ theme_bw() +
scale_y_continuous(labels=scales::percent) +
geom_text(aes(label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5, size=6)+
theme(axis.text.x=element_text(size=14))+
theme(text = element_text(size = 16)) +
ggtitle("percieved apple yield change")+
ylab("percentage")+ xlab("")
ggplot(apl, aes(x = as.numeric(apple_yield_change) )) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill=c("grey20", "grey40", "grey60", "grey70", "grey80"))+ theme_bw() +
scale_y_continuous(labels=scales::percent) +
geom_text(aes(label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5, size=6)+
theme(axis.text.x=element_text(size=14))+
theme(text = element_text(size = 16)) +
ggtitle("percieved apple yield change")+
ylab("percentage")+ xlab("")
ggplot(apl, aes(x = as.factor(apple_yield_change) )) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill=c("grey20", "grey40", "grey60", "grey70", "grey80"))+ theme_bw() +
scale_y_continuous(labels=scales::percent) +
geom_text(aes(label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5, size=6)+
theme(axis.text.x=element_text(size=14))+
theme(text = element_text(size = 16)) +
ggtitle("percieved apple yield change")+
ylab("percentage")+ xlab("")
ggplot(apl, aes(x = as.numeric(apple_yield_change) )) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill=c("grey20", "grey40", "grey60", "grey70", "grey80"))+ theme_bw() +
scale_y_continuous(labels=scales::percent) +
geom_text(aes(label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5, size=6)+
theme(axis.text.x=element_text(size=14))+
theme(text = element_text(size = 16)) +
ggtitle("percieved apple yield change")+
ylab("percentage")+ xlab("")
ggplot(apl, aes(x = as.numeric(apple_yield_change) )) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill=c("grey20", "grey40", "grey60", "grey70", "grey80"))+ theme_bw() +
scale_y_continuous(labels=scales::percent) +
geom_text(aes(label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5, size=6)+
theme(axis.text.x=element_text(size=14))+
theme(text = element_text(size = 16)) +
ggtitle("percieved apple yield change")+
ylab("percentage")+ xlab("")+
scale_x_discrete(labels=c('decrease', 'increase', 'no change', 'dont know', "NAs"))
ggplot(apl, x = as.numeric(apple_yield_change)) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill=c("grey20", "grey40", "grey60", "grey70", "grey80"))+ theme_bw() +
scale_y_continuous(labels=scales::percent) +
geom_text(aes(label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5, size=6)+
theme(axis.text.x=element_text(size=14))+
theme(text = element_text(size = 16)) +
ggtitle("percieved apple yield change")+
ylab("percentage")+ xlab("")+
scale_x_discrete(labels=c('decrease', 'increase', 'no change', 'dont know', "NAs"))
#### Apple decline question
#apple change
apl<-read.csv("../data/apple_change.csv", sep=";",check.names=FALSE)
colnames(apl)
ggplot(apl, aes(x = as.numeric(apple_yield_change) )) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill=c("grey20", "grey40", "grey60", "grey70", "grey80"))+ theme_bw() +
scale_y_continuous(labels=scales::percent) +
geom_text(aes(label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5, size=6)+
theme(axis.text.x=element_text(size=14))+
theme(text = element_text(size = 16)) +
ggtitle("percieved apple yield change")+
ylab("percentage")+ xlab("")
apl<-read.csv("../data/apple_change.csv", sep=";",check.names=FALSE)
colnames(apl)
apl
apl$apple_yield_change
apl[which(apl$apple_yield_change =="decrease"), 4]<-1
apl[which(apl$apple_yield_change =="increase"), 4]<-2
apl[which(apl$apple_yield_change=="no_change"), 4]<-3
apl[which(apl$apple_yield_change=="dont_know"), 4]<-4
apl[which(is.na(apl$apple_yield_change)), 4]<-5
bp_labs<-c('decrease', 'increase', 'no change', 'dont know', "NAs")
#ap_quan_plot<-
ggplot(apl, aes(x = as.numeric(apple_yield_change) )) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill=c("grey20", "grey40", "grey60", "grey70", "grey80"))+ theme_bw() +
scale_y_continuous(labels=scales::percent) +
geom_text(aes(label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5, size=6)+
theme(axis.text.x=element_text(size=14))+
theme(text = element_text(size = 16)) +
ggtitle("percieved apple yield change")+
ylab("percentage")+ xlab("") +
scale_x_discrete(labels=c('decrease', 'increase', 'no change', 'dont know', "NAs"))
ggplot(apl, aes(x = as.numeric(apple_yield_change) )) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill=c("grey20", "grey40", "grey60", "grey70", "grey80"))+ theme_bw() +
scale_y_continuous(labels=scales::percent) +
geom_text(aes(label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5, size=6)+
theme(axis.text.x=element_text(size=14))+
theme(text = element_text(size = 16)) +
ggtitle("percieved apple yield change")+
ylab("percentage")+ xlab("")
ggplot(apl, aes(x = as.numeric(apple_yield_change) )) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill=c("grey20", "grey40", "grey60", "grey70", "grey80"))+ theme_bw() +
scale_y_continuous(labels=scales::percent) +
geom_text(aes(label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5, size=6)+
theme(axis.text.x=element_text(size=14))+
theme(text = element_text(size = 16)) +
ggtitle("apple yield change")+
ylab("percentage")+ xlab("")
apl[which(apl$apple_qual_change =="decrease"), 6]<-1
apl[which(apl$apple_qual_change =="increase"), 6]<-2
apl[which(apl$apple_qual_change=="no_change"), 6]<-3
apl[which(apl$apple_qual_change=="dont_know"), 6]<-4
apl[which(is.na(apl$apple_qual_change)), 6]<-5
ap_qual_plot<-ggplot(apl, aes(x = as.numeric(apple_qual_change))) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill=c("grey20", "grey40", "grey60", "grey70", "grey80"))+ theme_bw() +
scale_y_continuous(labels=scales::percent) +
ylab("")+ xlab("")+
geom_text(aes( label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5, size=6)+
theme(axis.text.x=element_text(size=14))+
theme(text = element_text(size = 16)) +
ggtitle("apple quality change")
ap_qual_plot
Fig_apple<-ggarrange(ap_quan_plot, ap_qual_plot, widths = c( 6, 6), labels = c("a", "b"), font.label = list(size = 16, color = "black"), ncol = 2)
annotate_figure(Fig_apple)
ap_quan_plot<- ggplot(apl, aes(x = as.numeric(apple_yield_change) )) +
geom_bar(aes(y = (..count..)/sum(..count..)), fill=c("grey20", "grey40", "grey60", "grey70", "grey80"))+ theme_bw() +
scale_y_continuous(labels=scales::percent) +
geom_text(aes(label = scales::percent(..prop..), y= ..prop.. ), stat= "count", vjust = -.5, size=6)+
theme(axis.text.x=element_text(size=14))+
theme(text = element_text(size = 16)) +
ggtitle("apple yield change")+
ylab("percentage")+ xlab("")
Fig_apple<-ggarrange(ap_quan_plot, ap_qual_plot, widths = c( 6, 6), labels = c("a", "b"), font.label = list(size = 16, color = "black"), ncol = 2)
annotate_figure(Fig_apple)
ggsave(paste0(dirF, "Fig_apples.png"),width=8, height =8, units="in", dpi=600 )
