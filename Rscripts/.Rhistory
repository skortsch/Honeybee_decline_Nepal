theme_light()+  ylab("Expected visits")+xlab("Connectance") +labs(col = "Nestedness") +theme(legend.position = "none")
dev.null <- glm.conn_nest3$null.deviance
dev.resid <- glm.conn_nest3$deviance
dev.explained <- (dev.null - dev.resid)/dev.null*100
dev.explained
#Checked model assumption with the DHARMa R package but output looks weird?
#simResids <- simulateResiduals(glm.conn_nest2)
#plot(simResids)
#abundMod3 <- glm.nb(round(pvis) ~ connectance*nestedness,data=df.vis)
#summary(abundMod3)
#plot_model(glm.mod, type = "int")#type = "int" will automatically plot the interaction terms, however, using mdrt.values = "minmax"
#lm.mod<-lm(round(pvis) ~ connectance*nestedness, data=df.vis, family=poisson())
#summary(lm.mod)
#plot_model(lm.mod, type="pred", terms = c("connectance", "nestedness [30, 50, 70]"))
#plot_model(lm.mod, type = "int")#type = "int" will automatically plot the interaction terms, however, using mdrt.values = "minmax"
#poor model fit (239879-231798)/239879*100
ggarrange(plot_glm.conn_nest1, plot_glm.conn_nest2, plot_glm.conn_nest3,  labels = c("A", "B", "C"), ncol = 3, common.legend = TRUE)
#glm.conn_nest_pref1<-glm(round(number_visits) ~ connectance*nestedness*pl.pref, data=df.vis, family=poisson())
#summary(glm.conn_nest_pref1)
#dev.null <- glm.conn_nest_pref1$null.deviance
#dev.resid <- glm.conn_nest_pref1$deviance
#dev.explained <- (dev.null - dev.resid)/dev.null*100
#dev.explained
glm.conn_nest_dens1<-glm(round(number_visits) ~ connectance*nestedness*pl.dens, data=df.vis, family=poisson())
summary(glm.conn_nest_dens1)
pred <- expand.grid(connectance=seq(0,1,0.1), nestedness=c(30, 50, 70), pl.dens=c(0.2, 0.5, 0.7))
pred$y <- predict(glm.conn_nest_dens1, pred, type="response")
ggplot(pred,aes(x=connectance,y=y,color=factor(nestedness),group=nestedness))+geom_line()+
facet_grid(~pl.dens,labeller ="label_both") +
theme_light()+  ylab("Visitation rate")+xlab("Connectance") +labs(col = "Nestedness") +theme(strip.text.x = element_text(size = 12))
dev.null <- glm.conn_nest_dens1$null.deviance
dev.resid <- glm.conn_nest_dens1$deviance
dev.explained <- (dev.null - dev.resid)/dev.null*100
dev.explained
#with plant density
#glm.conn_nest_pref_dens1<-glm(round(number_visits) ~ connectance*nestedness*pl.pref*pl.dens, data=df.vis, family=poisson())
#summary(glm.conn_nest_pref_dens1)
#dev.null <- glm.conn_nest_pref_dens1$null.deviance
#dev.resid <- glm.conn_nest_pref_dens1$deviance
#dev.explained <- (dev.null - dev.resid)/dev.null*100
#dev.explained
#plot_glm.conn_nest_pref_dens1<-plot_model(glm.conn_nest_pref_dens1, type="pred", terms = c("connectance", "nestedness[0, 30, 50, 70]"))+
#set wd
setwd("C:/Users/skort/Documents/field work Nepal/field_data")
getwd()
#set wd
setwd("C:/Users/skort/Documents/field work Nepal/field_data")
#set wd
setwd("C:/Users/skort/Documents/field work Nepal/field_data")
#set wd
setwd("C:/Users/skort/Documents/field work Nepal/field_data")
getwd()
#load library
library(tidyverse)
o.7^4
0.7^4
#boxplot honey yield decline
boxplot(hy[, c(3:7)], ylab="kg honey per hive", xlab="years")
### KOB_2018_FOOD_WEB
#set working directory
#setwd("C:/LocalData/susakort/AOF_proposal/Mesosom_analyses/R_scripts")
setwd("C:/LocalData/susakort/Lucinda/Mesosom_analyses/kob_2018/R_scripts")
getwd()
### KOB_2018_FOOD_WEB
#set working directory
#setwd("C:/LocalData/susakort/AOF_proposal/Mesosom_analyses/R_scripts")
setwd("C:/LocalData/susakort/Lucinda/Mesosom_analyses/kob_2018/R_scripts")
### KOB_2018_FOOD_WEB
#set working directory
#setwd("C:/LocalData/susakort/AOF_proposal/Mesosom_analyses/R_scripts")
setwd("C:/LocalData/susakort/Lucinda/Mesosom_analyses/kob_2018/R_scripts")
### KOB_2018_FOOD_WEB
#set working directory
#setwd("C:/LocalData/susakort/AOF_proposal/Mesosom_analyses/R_scripts")
setwd("C:/LocalData/susakort/Lucinda/Mesosom_analyses/kob_2018/R_scripts")
getwd()
#this is the correct wd path
#C:\LocalData\susakort\field work Nepal\Rscripts
setwd("C:/LocalData/susakort/field work Nepal/Rscripts")
#Figure dir and pixels
ppi<-300 #pixels per inches
dirF<-"../Figures/"
#load library
library(tidyverse)
library(tidytext)
library(ggpubr)
library(ggpmisc)
#honey yield change data file
hy<-read.csv("../data/honey_yield_change.csv", sep=";",check.names=FALSE)
colnames(hy)
hy
View(hy)
#honey yield change data file
hy<-read.csv("../data/honey_yield_change.csv", sep=";",check.names=FALSE)
colnames(hy)
#honey yield change data file
hy<-read.csv("../data/honey_yield_change.csv", sep=";",check.names=FALSE)
colnames(hy)
####### HONEY YIELD CHANGE PER HIVE DECLINE #########
#boxplot honey yield decline
boxplot(hy[, c(5:9)], ylab="kg honey per hive", xlab="years")#check data
hy_t %>% ggplot(aes(x = as.numeric(year),y = log(value+1))) + geom_point() + geom_smooth(method = "lm")+
facet_wrap(~study_village, scales = "free_y") +
theme_light()+stat_compare_means(method = "anova", label.y = 7)+ ylab("Honey yield per hive")
#convert table honey yield
#hy_t <- pivot_longer(hy[,-2],cols = c("2011.y.before", "2011y", "2017y","2019y","2021y"), names_to = "year")
hy_t <- pivot_longer(hy[,],cols = c("2009", "2012", "2017", "2019", "2021"), names_to = "year")
hy_t %>% ggplot(aes(x = as.numeric(year),y = log(value+1))) + geom_point() + geom_smooth(method = "lm")+
facet_wrap(~study_village, scales = "free_y") +
theme_light()+stat_compare_means(method = "anova", label.y = 7)+ ylab("Honey yield per hive")
#+stat_poly_line() + stat_poly_eq(aes(label = paste(after_stat(eq.label), sep = "*\", \"*")))
#
bc<-read.csv("../data/beehive_change.csv", check.names=FALSE)
bc
#
bc<-read.csv("../data/beehive_change.csv", sep=";",check.names=FALSE)
bc
dim(bc)
bh_t <- pivot_longer(bc[,],cols = c("2009", "2011", "2017","2019","2021"), names_to = "year")
bh_t <- pivot_longer(bc[,],cols = c("2009", "2012", "2017","2019","2021", "2022"), names_to = "year")
bh_t
mod.lm<-lm(log(value+1) ~ as.numeric(year), data=bh_t)
mod.lm
summary(mod.lm)
bh_t %>% ggplot(aes(x = as.numeric(year),y = log(value+1))) + geom_jitter(shape=16, position=position_jitter(0.1), alpha=0.3)+ geom_smooth(method = "lm")+
theme_light()+stat_compare_means(method = "anova", label.y = 7)+ ylab("no. of beehives")+xlab("year")+
stat_poly_line() + stat_poly_eq(aes(label = paste(after_stat(eq.label), sep = "*\", \"*")))+xlab("year")+
scale_x_continuous(breaks = scales::pretty_breaks(n = 5))
#+theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) #change angles of labs
# an
bh_t %>% ggplot(aes(x = as.numeric(year),y = log(value+1))) + geom_point() + geom_smooth(method = "lm")+
facet_wrap(~study_village, scales = "free_y") +
theme_light()+stat_compare_means(method = "anova", label.y = 7)+ ylab("no.of beehives")+
stat_poly_line() + stat_poly_eq(aes(label = paste(after_stat(eq.label), sep = "*\", \"*")))
bh_t %>% ggplot(aes(x = as.numeric(year),y = log(value+1))) + geom_jitter(shape=16, position=position_jitter(0.1), alpha=0.3)+ geom_smooth(method = "lm")+
theme_light()+stat_compare_means(method = "anova", label.y = 7)+ ylab("no. of beehives")+xlab("year")+
stat_poly_line() + stat_poly_eq(aes(label = paste(after_stat(eq.label), sep = "*\", \"*")))+xlab("year")+
scale_x_continuous(breaks = scales::pretty_breaks(n = 5))
#+theme
mod.lm<-lm(log(value+1) ~ as.numeric(year), data=bh_t)
mod.lm
summary(mod.lm)
bh_t %>% ggplot(aes(x = as.numeric(year),y = log(value+1))) + geom_point() + geom_smooth(method = "lm")+
facet_wrap(~study_village, scales = "free_y") +
theme_light()+stat_compare_means(method = "anova", label.y = 7)+ ylab("no.of beehives")+
stat_poly_line() + stat_poly_eq(aes(label = paste(after_stat(eq.label), sep = "*\", \"*")))
bh_t %>% ggplot(aes(x = as.numeric(year),y = log(value+1))) + geom_point() + geom_smooth(method = "lm")+
facet_wrap(~study_village, scales = "free_y") +
theme_light()+stat_compare_means(method = "anova", label.y = 7)+ ylab("no.of beehives")+ xlab("year")
stat_poly_line() + stat_poly_eq(aes(label = paste(after_stat(eq.label), sep = "*\", \"*")))
